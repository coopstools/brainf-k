#include <stdio.h>
#include <stdlib.h>

int i = 4;
int *ptr;
int inputc = 0;
int inputptr = 0;
int inputs[128];

void inc() { ptr[i] = (ptr[i]+1)%256; }

void dec() { ptr[i] = (ptr[i]+255)%256; }

void movl() { i -= 1; }

void movr() { i += 1; }

void setFrom() {
  if (inputptr >= inputc) {
    ptr[i] = 0;
    return;
  }
  ptr[i] = inputs[inputptr++];
}

void set(int v) { ptr[i] = v; }

void out() {
  FILE* out = ptr[0] == 0 ? stdout : stderr;
  int format = ptr[1];
  switch(format) {
    case 1:
      fprintf(out, "%c", ptr[i]);
      break;
    case 2:
      fprintf(out, "0x%x ", ptr[i]);
      break;
    default:
      fprintf(out, "%d ", ptr[i]);
  }
}

void debug(int width) { 
  int k = i;
  if (k < width) { k = width+1; }
  FILE* out = ptr[2] == 0 ? stdout : stderr;
  int format = ptr[3];
  fprintf(out, "%d [", i);
  for (int j = k-width; j <= k+width; j++) {
    switch(format) {
      case 1:
        fprintf(out, "%c", ptr[j]);
        break;
      case 2:
        fprintf(out, "0x%x", ptr[j]);
        break;
      default:
        fprintf(out, "%d", ptr[j]);
    }
    if (j < k+width) { fprintf(out, "  "); }
  }
  fprintf(out, "] \n");
}

// start custom code
{{$funcs}}
// stop custom code

int buildInputs(int argc, char *argv[]) {
  for (int i = 1; i < argc; i++) {
    char *str = argv[i];
    char *start = str;
    char *end;

    while (*start != '\0') {
      long num = strtol(start, &end, 10);
      if (start == end) {
        if (*start != '\0') {
          start++;
        }
      } else {
        if (inputc >= 128) {
            fprintf(stderr, "Too many numbers. Maximum 100.\n");
            return 1;
        }
        inputs[inputc++] = (int)num;
        start = end;
      }
    }
  }
  return 0;
}

int main(int argc, char *argv[]) {
  ptr = (int *)calloc(sizeof(int), 16384);
  int returnCode = buildInputs(argc, argv);
  if (returnCode != 0) {
    return returnCode;
  }
  f0();
  free(ptr);
  return 0;
}
